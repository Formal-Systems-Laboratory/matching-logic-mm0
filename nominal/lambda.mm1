import "core.mm1";

term Var_sym: Symbol;
def Var: Pattern = $ sym Var_sym $;
def Vars: Pattern = $ dom Var $;
axiom Var_atom: $ is_atom_sort Var $;

term Exp_sym: Symbol;
def Exp: Pattern = $ sym Exp_sym $;
def Exps: Pattern = $ dom Exp $;
axiom Exp_sort: $ is_nominal_sort Exp $;

term lc_var_sym: Symbol;
def lc_var (phi: Pattern): Pattern = $ (sym lc_var_sym) @@ phi $;
axiom function_lc_var: $ ,(is_function '(sym lc_var_sym) '[Var] 'Exp) $;

term lc_app_sym: Symbol;
def lc_app (phi rho: Pattern): Pattern = $ (sym lc_app_sym) @@ phi @@ rho $;
axiom function_lc_app: $ ,(is_function '(sym lc_var_app) '[Exp Exp] 'Exp) $;

term lc_lam_sym: Symbol;
def lc_lam (phi: Pattern): Pattern = $ (sym lc_lam_sym) @@ phi $;
axiom function_lc_lam: $ ,(is_function '(sym lc_lam_sym) '[(sort_abstraction Var Exp)] 'Exp) $;
axiom EV_lc_lam {a b: EVar} (phi: Pattern a b):
  $ is_of_sort phi (sort_abstraction Var Exp) $ >
  $ s_forall Var a (s_forall Var b ((swap a b (lc_lam phi)) == lc_lam (swap a b phi))) $;

axiom no_junk {X: SVar}:
  $ Exps == mu X ( (lc_var Vars)
                \/ (lc_app (sVar X) (sVar X))
                \/ (lc_lam (abstraction Vars (sVar X)))) $;

--- no_confusion


theorem exp_pred_ev_unquantified {x y: EVar} (exp_pred: Pattern)
  (exp_pred_ev: $ EV_pattern Var exp_pred $):
  $ (is_of_sort (eVar x) Var) /\ (is_of_sort (eVar y) Var) -> ((swap x y exp_pred) == exp_pred) $ =
  '(curry @ syl var_subst_same_var @ var_subst_same_var exp_pred_ev);

theorem lc_lemma_1 {x: EVar} (exp_pred exp_suff_fresh: Pattern)
  (exp_suff_fresh_sorting: $ is_of_sort exp_suff_fresh Var $)
  (exp_suff_fresh_nonempty: $ |^ exp_suff_fresh ^| $)
  (h_abs: $ (lc_lam (abstraction exp_suff_fresh exp_pred)) C= exp_pred $):
  $ s_exists Var x ((lc_lam (abstraction (eVar x) exp_pred)) C= exp_pred) $ =
  (named '(exists_framing (rsyl (anl eVar_in_subset) @ iand
    (com12 subset_trans exp_suff_fresh_sorting)
    (rsyl (syl
        ,(subset_imp_subset_framing_subst 'appCtxRVar)
        ,(subset_imp_subset_framing_subst 'appCtxLRVar)
      ) @ com12 subset_trans h_abs))
    @ anl lemma_ceil_exists_membership exp_suff_fresh_nonempty));

theorem lc_lemma_2 {x y: EVar} (exp_pred: Pattern)
  (ev_unquant: $ (is_of_sort (eVar x) Var) /\ (is_of_sort (eVar y) Var) -> ((swap x y exp_pred) == exp_pred) $):
  $ (((is_of_sort (eVar x) Var) /\ (is_of_sort (eVar y) Var)) /\ ((lc_lam (abstraction (eVar y) exp_pred)) C= exp_pred)) -> ((lc_lam (abstraction (eVar x) exp_pred)) C= exp_pred) $ =
  '(rsyl (anim2 ,(subset_imp_subset_framing_subst 'appCtxRVar)) @
  _);

theorem lc_lemma_3 {y: EVar} (exp_pred: Pattern)
  (exp_suff_fresh_sorting: $ is_of_sort exp_suff_fresh Var $)
  (exp_suff_fresh_nonempty: $ |^ exp_suff_fresh ^| $)
  (exp_pred_ev: $ EV_pattern Var exp_pred $)
  (h_abs: $ (lc_lam (abstraction exp_suff_fresh exp_pred)) C= exp_pred $):
  $ is_of_sort (eVar y) Var -> ((lc_lam (abstraction (eVar y) exp_pred)) C= exp_pred) $ =
  (named '(
    rsyl (ian2 @ lc_lemma_1 exp_suff_fresh_sorting exp_suff_fresh_nonempty h_abs) @
    rsyl and_exists_disjoint_reverse @
    exists_generalization_disjoint @
    rsyl (anr anass) @
    lc_lemma_2 @ exp_pred_ev_unquantified exp_pred_ev));
 
theorem freshness_irrelevance (exp_pred exp_suff_fresh: Pattern)
  (exp_suff_fresh_sorting: $ is_of_sort exp_suff_fresh Var $)
  (exp_suff_fresh_nonempty: $ |^ exp_suff_fresh ^| $)
  (exp_pred_ev: $ EV_pattern Var exp_pred $)
  (h_abs: $ (lc_lam (abstraction exp_suff_fresh exp_pred)) C= exp_pred $):
  $ (lc_lam (abstraction Vars exp_pred)) C= exp_pred $ = (named
  '(norm (norm_subset appCtxRLRVar norm_refl) @
    pointwise_decomposition @
    norm (norm_sym @ norm_imp_r @ norm_subset appCtxRLRVar norm_refl) @
    rsyl (anl eVar_in_subset) @
    lc_lemma_3 exp_suff_fresh_sorting exp_suff_fresh_nonempty exp_pred_ev h_abs));

theorem prototype_induction_principle (exp_pred exp_suff_fresh: Pattern)
  (exp_suff_fresh_sorting: $ is_of_sort exp_suff_fresh Var $)
  (exp_suff_fresh_nonempty: $ |^ exp_suff_fresh ^| $)
  (exp_pred_sorting: $ is_of_sort exp_pred Exp $)
  (exp_pred_ev: $ EV_pattern Var exp_pred $)
  (h_var: $ (lc_var Vars) C= exp_pred $)
  (h_app: $ (lc_app exp_pred exp_pred) C= exp_pred $)
  (h_abs: $ (lc_lam (abstraction exp_suff_fresh exp_pred)) C= exp_pred $):
  $ Exps == exp_pred $ = (named '(subset_to_eq (imp_to_subset @
    rsyl (corollary_57_floor @ eq_imp_subset no_junk) @
    KT_subst
      (positive_in_or (positive_in_or positive_disjoint @ positive_in_app (positive_in_app positive_disjoint positive_in_same_sVar) positive_in_same_sVar) @ positive_in_app positive_disjoint @ positive_in_app positive_disjoint positive_in_same_sVar)
      ,(propag_s_subst_adv 'X $a \/ (app (app a (sVar X)) (sVar X)) \/ (app a (app a (sVar X)))$ (atom-map! '[a #t])) @
      eori (eori
        (corollary_57_floor h_var)
        (corollary_57_floor h_app))
        @ corollary_57_floor @ freshness_irrelevance exp_suff_fresh_sorting exp_suff_fresh_nonempty exp_pred_ev h_abs
  ) exp_pred_sorting));
